name: Open Liberty S2I Continuous Integration
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - 'docs/**'
env:
  LANG: en_US.UTF-8
  S2I_URI: https://api.github.com/repos/openshift/source-to-image/releases/tags/v1.3.8
  CEKIT_VERSION: 3.3.1
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
jobs:
  olci:
    name: Open Liberty S2I Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: n1hility/cancel-previous-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Check dockerhub configuration
        if: env.DOCKER_USERNAME == '' || env.DOCKER_REPO == ''
        run: |
          echo "dockerhub configuration is incomplete, push to dockerhub will be skipped. If you wish to push built images to dockerhub, please ensure the secrets DOCKERHUB_USERNAME and DOCKERHUB_PASSWORD are created in the project."
      - name: Get PR ID
        uses: actions/github-script@v3.1.0
        with:
          github-token: ${{github.token}}
          script: |
            const prNumber = context.payload.number;
            core.exportVariable('PULL_NUMBER', prNumber);
      - name: Verify latest centos image is present
        run: |
          docker image ls | grep centos || true
          docker pull centos:7
          docker pull centos/s2i-base-centos7
          docker image ls | grep centos
      - name: Setup required system packages
        run: |
          echo PULL NUMBER: ${PULL_NUMBER}
          sudo apt-get update
          sudo apt-get install krb5-multidev
      - name: Setup Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Setup virtualenv and install cekit and required packages
        run: |
          python --version
          sudo pip install virtualenv
          mkdir ~/cekit${{ env.CEKIT_VERSION }}
          python3 -m venv ~/cekit${{ env.CEKIT_VERSION }}
          . ~/cekit${{ env.CEKIT_VERSION }}/bin/activate
          pip install cekit==${{ env.CEKIT_VERSION }} docker docker-squash odcs behave lxml 
      - name: install s2i binary
        run: |
          echo ===== Installing s2i from ${{ env.S2I_URL }} =====
          mkdir /tmp/s2i/ && cd /tmp/s2i/
          curl -s ${{ env.S2I_URI }} \
           | grep browser_download_url \
           | grep linux-amd64 \
           | cut -d '"' -f 4 \
           | wget -qi -
           tar xvf source-to-image*.gz
           sudo mv s2i /usr/bin
           which s2i
           s2i version
      - name: Build 
        run: |
          . ~/cekit${{ env.CEKIT_VERSION }}/bin/activate
          make
          docker image ls
      - name: Push to dockerhub
        if: env.DOCKERHUB_USERNAME != '' 
        run: |        
            BUILDER_IMAGE="openliberty/open-liberty-s2i:${LIBERTY_VERSION}-${JAVA_VERSION}"
            RUNTIME_IMAGE="openliberty/open-liberty-s2i:${LIBERTY_VERSION}-runtime-${JAVA_VERSION}"
          
            echo Pushing to Docker Hub with the tag :${VERSION}-${JAVA_VERSION}
            echo BUILDER_IMAGE: ${BUILDER_IMAGE}
            echo RUNTIME_IMAGE: ${RUNTIME_IMAGE}
            echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{secrets.DOCKERHUB_USERNAME }}" --password-stdin
                       
            docker push ${BUILDER_IMAGE}           
            docker push ${RUNTIME_IMAGE}
      - name: Run Tests
        run: |          
          JAVA8_IMAGE_VERSION=$(JAVA8_IMAGE_VERSION) \
	        JAVA8_RUNTIME_IMAGE_VERSION=$(JAVA8_RUNTIME_IMAGE_VERSION) \
	        JAVA11_IMAGE_VERSION=$(JAVA11_IMAGE_VERSION) \
	        JAVA11_RUNTIME_IMAGE_VERSION=$(JAVA11_RUNTIME_IMAGE_VERSION) \
	        JAVA17_IMAGE_VERSION=$(JAVA17_IMAGE_VERSION) \
	        JAVA17_RUNTIME_IMAGE_VERSION=$(JAVA17_RUNTIME_IMAGE_VERSION)         
          export IMAGE_NAME=openliberty/open-liberty-s2i
          export JAVA8_IMAGE_VERSION=$(LIBERTY_VERSION)-java8
          export JAVA8_RUNTIME_IMAGE_VERSION=$(LIBERTY_VERSION)-runtime-java8 
          export JAVA11_IMAGE_VERSION=$(LIBERTY_VERSION)-java11
          export JAVA11_RUNTIME_IMAGE_VERSION=$(LIBERTY_VERSION)-runtime-java11
          export JAVA17_IMAGE_VERSION=$(LIBERTY_VERSION)-java17
          export JAVA17_RUNTIME_IMAGE_VERSION=$(LIBERTY_VERSION)-runtime-java17   
          . ~/cekit${{ env.CEKIT_VERSION }}/bin/activate
          ./test/run